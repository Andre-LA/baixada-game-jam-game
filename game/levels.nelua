require 'vector'
require 'game.tilemap_creator'

local NONE: Tile <const> = { {0,0,0,0 }, 0, 0, TileKind.None }
local GEAR: Tile <const> = { {0,0,0,0 }, 0, -32, TileKind.Gear }
local  BOX: Tile <const> = { {0,0,0,0 }, 0, -32, TileKind.Box  }

## local levels_count = 2

## for i = 1, 9 do
   local #|'WTP'..i|#: Tile <const> = { {0,0,0,0}, 2, 32, TileKind.#|'WallTop'..i|#}
## end

## for _, v in pairs{'TL', 'TC', 'TR', --[['ML', 'MC', 'MR',]] 'BL', 'BC', 'BR'} do
   ## local r = string.sub(v, 1, 1) == 'T' and { y = 24, h = 8 } or { y = 0, h = 32 }
   local #|'WA'..v|#: Tile <const> = { {0, #[r.y]#, 32, #[r.h]#}, 1, 0, TileKind.#|'Wall'..v|# }
## end

## for i = 1, 3 do
   ##[[
      local r = {
         { y = -16, h = 16 },
         { y =   0, h =  0 },
         { y =   0, h = 16 },
      }
   ]]
   local #|'FLR'..i|#: Tile <const> = { {0,#[r[i].y]#,32,#[r[i].h]#}, 0, -32, TileKind.#|'Floor'..i|# }
## end

## for i = 1, levels_count do
   local #|'BDG'..i|#: Tile <const> = { {0, 0, 32, 32}, 0, 0, TileKind.#|'Bridge'..i|# }
## end

## for i = 1, levels_count do
   local #|'GRS'..i|#: Tile <const> = { WABC.collider_rect, WABC.offset_mul, 0, TileKind.#|'GearSlot'..i|# }
## end

global function create_level_1(
   origin: Vector2
)
   local tilemap: vector(vector(Tile)) = {
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1, WATR, WATC, WATC, WATR, WTP6, NONE, NONE, NONE, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1, WABL, GRS2, WABC, WABR, WATL, WATC, WATR, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, WATL, WATC, WATC, WATC, WATC, WATR, FLR2, FLR2, FLR2, FLR2, WABL, WABC, WABR, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, WABL, WABC, WABC, WABC, WABC, WABR, FLR2, FLR2, FLR2, FLR2, FLR2, FLR2, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, FLR2, FLR2, BDG2, BDG2, FLR2, FLR2, FLR2, FLR2, WTP4, WTP3, WTP9, FLR2, FLR2, WATL, WTP5 },
      { NONE, NONE, NONE, NONE, NONE, WTP3, WTP3, WTP3, WTP3, WTP3, WTP9, FLR2, FLR2, WATL, WATC, WATR, FLR2, FLR2, WABL, WTP5 },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1,  BOX, FLR2, WABL, WABC, WABR, FLR2, GEAR, FLR2, WTP5 },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1, FLR2, FLR2, FLR2, FLR2, FLR2, FLR2, FLR2, FLR2, WTP5 },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP7, WTP3, WTP3, WTP3, WTP3, WTP3, WTP9, FLR2, WTP4, WTP8 },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP1, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WATL, WATC, WATC, WATC, WATC, WATC, WATC, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WABL, GRS1, WABC, WABC, WABC, WABC, WABR, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, FLR2, FLR2, FLR2, BDG1, BDG1, FLR2, FLR2, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, FLR2, GEAR, FLR2, BDG1, BDG1, FLR2, FLR2, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, FLR2, FLR2, FLR2, BDG1, BDG1, FLR2, FLR2, FLR2, WTP5, NONE },
      { NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, NONE, WTP3, WTP3, WTP3, WTP3, WTP3, WTP3, WTP3, WTP3, WTP8, NONE }
   }

   create_tiles(
      origin,
      tilemap,
      Globals.untracked_ids
   )
end
