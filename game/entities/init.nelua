require 'vector'
require 'raylib'
require 'rotor'
require 'game.components'

global TestEntity_1 = @record{
   entity_id: GenerationalIndex,
   player_id: GenerationalIndex,
   position_id: GenerationalIndex,
   velocity_id: GenerationalIndex,
   obstacles_id: GenerationalIndex,
   collider_id: GenerationalIndex,
   collisions_id: GenerationalIndex,
   sprite_id: GenerationalIndex,
   animations_id: GenerationalIndex,
}

function TestEntity_1:create(
   entity_storage: Storage(Entity)*,
   player_storage: Storage(Player)*        , player_vl: Player,
   position_storage: Storage(Position)*    , position_vl: Position,
   velocity_storage: Storage(Velocity)*    , velocity_vl: Velocity,
   obstacles_storage: Storage(Obstacles)*  , obstacles_vl: Obstacles,
   collider_storage: Storage(Collider)*    , collider_vl: Collider,
   collisions_storage: Storage(Collisions)*,
   sprite_storage: Storage(Sprite)*        , sprite_vl: Sprite,
   animations_storage: Storage(Animations)*, animations_vl: Animations,
   untracked_ids: vector(GenerationalIndex)*
)
   local test_entity_id, test_entity = entity_storage:new_entry(Entity.new())

   local player_id, player = player_storage:new_entry(player_vl)
   test_entity:associate(player_id, component_masks.player)

   local position_id, position = position_storage:new_entry(position_vl)
   test_entity:associate(position_id, component_masks.position)

   local velocity_id, velocity = velocity_storage:new_entry(velocity_vl)
   test_entity:associate(velocity_id, component_masks.velocity)

   local obstacles_id, obstacles = obstacles_storage:new_entry(obstacles_vl)
   test_entity:associate(obstacles_id, component_masks.obstacles)

   collider_vl.entity_id = test_entity_id
   local collider_id, collider = collider_storage:new_entry(collider_vl)
   test_entity:associate(collider_id, component_masks.collider)

   local collisions_id, collisions = collisions_storage:new_entry({{}})
   test_entity:associate(collisions_id, component_masks.collisions)

   local sprite_id, sprite = sprite_storage:new_entry(sprite_vl)
   test_entity:associate(sprite_id, component_masks.sprite)

   local animations_id, animations = animations_storage:new_entry(animations_vl)
   test_entity:associate(animations_id, component_masks.animations)

   untracked_ids:push(test_entity_id)

   $self = {
      entity_id = test_entity_id,
      player_id = player_id,
      position_id = position_id,
      velocity_id = velocity_id,
      obstacles_id = obstacles_id,
      collider_id = collider_id,
      collisions_id = collisions_id,
      sprite_id = sprite_id,
      animations_id = animations_id,
   }
end
